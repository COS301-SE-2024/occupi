name: Lint, Test and Build golang

on:
  pull_request:
    branches: ["develop"]
    paths: [
      "occupi-backend/cmd/**",
      "occupi-backend/configs/**",
      "occupi-backend/pkg/**",
      "occupi-backend/.golangci.yml",
      "occupi-backend/tests/**",
      ".github/workflows/lint-test-build-golang.yml"
    ]
  
  push:
    branches: ["feat/actions/adding-env-variables-for-backend"]
    paths: [
      "occupi-backend/cmd/**",
      "occupi-backend/configs/**",
      "occupi-backend/pkg/**",
      "occupi-backend/.golangci.yml",
      "occupi-backend/tests/**",
      ".github/workflows/lint-test-build-golang.yml"
    ]

  workflow_dispatch:

defaults:
  run:
    working-directory: occupi-backend

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'  # Specify the Go version you are using

    - name: Install golangci-lint
      run: |
        go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

    - name: Run golangci-lint
      run: |
        golangci-lint run

  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'  # Specify the Go version you are using
    
    - name: Decrypt env variables
      run: |
                echo "${{ secrets.GPG_PASSPHRASE }}" | gpg --quiet --batch --yes --decrypt --passphrase-fd 0 .env.gpg > .env
                
    - name: Decrypt key file
      run: |
                echo "${{ secrets.GPG_PASSPHRASE }}" | gpg --quiet --batch --yes --decrypt --passphrase-fd 0 key.pem.gpg > key.pem

    - name: Decrypt cert file
      run: |
                echo "${{ secrets.GPG_PASSPHRASE }}" | gpg --quiet --batch --yes --decrypt --passphrase-fd 0 cert.pem.gpg > cert.pem

    - name: Run tests
      run: |
        go test -v -coverpkg=github.com/COS301-SE-2024/occupi/occupi-backend/pkg/utils,github.com/COS301-SE-2024/occupi/occupi-backend/pkg/handlers ./tests/... -coverprofile=coverage.out

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'  # Specify the Go version you are using

    - name: Build the code
      run: |
        go build -v cmd/occupi-backend/main.go
