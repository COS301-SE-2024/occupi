name: Build and Release all

on:
  push:
    branches:
      - action-needs-refinement-lol

jobs:
    build-backend-binary:
        strategy:
          matrix:
            include:
              - os: macos-latest # for Arm based macs (M1 and above).
                goos: darwin
                extension: ""
                args: '--target aarch64-apple-darwin'
                arch: arm64
              - os: macos-latest # for Intel based macs.
                goos: darwin
                extension: ""
                args: '--target x86_64-apple-darwin'
                arch: x86_64
              - os: windows-latest # for Windows.
                goos: windows
                extension: ".exe"
                args: ''
                arch: x86_64
              - os: ubuntu-latest # for Linux.
                goos: linux
                extension: ""
                args: ''
                arch: x86_64

        name: Build Backend Binary
        runs-on: ${{ matrix.os }}

        steps:
          - name: Checkout code
            uses: actions/checkout@v4
    
          - name: Set up Go
            uses: actions/setup-go@v5
            with:
              go-version: '1.21'  # Specify the Go version you are using
    
          - name: Build application
            run: |
              cd occupi-backend
              go build -o occupi-backend_${{ matrix.goos }}_${{ matrix.arch }}${{ matrix.extension }} ${{ matrix.args }} -v cmd/occupi-backend/main.go
    
          - name: Upload artifact
            uses: actions/upload-artifact@v3
            with:
              name: occupi-backend_${{ matrix.goos }}_${{ matrix.arch }}${{ matrix.extension }}
              path: occupi-backend/occupi-backend_${{ matrix.goos }}_${{ matrix.arch }}${{ matrix.extension }}

    build-expo-app:
        name: Build Expo App for Android and iOS
        runs-on: [ubuntu-latest, macos-latest]
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v2
              with:
                node-version: '20'

            - name: Install Expo CLI
              run: |
                npm install -g expo-cli

            - name: Install Expo dependencies
              run: |
                cd occupi-frontend
                npm install

            - name: Build Expo App for native platforms
              run: |
                cd occupi-frontend/occupi-mobile
                expo build
            
            - name: Archive Expo App for Android and iOS
              run: |
                mkdir -p dist
                mv occupi-frontend/occupi-mobile/dist dist/occupi-mobile
                zip -r dist/occupi-mobile.zip dist/occupi-mobile

            - name: Upload Expo App for Android and iOS
              uses: actions/upload-artifact@v2
              with:
                name: occupi-mobile
                path: dist/occupi-backend.zip

    build-vite-app:
        name: Build Vite App
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Bun
              uses: oven-sh/setup-bun@v1
              with:
                bun-version: latest # or "latest", "canary", <sha>

            - name: Install dependencies with Bun
              run: |
                cd frontend/occupi-web
                bun install

            - name: Build with Vite
              run: |
                cd frontend/occupi-web
                bun run build
            
            - name: Archive Vite App from dist folder
              run: |
                zip -r dist/occupi-web.zip frontend/occupi-web/dist

            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                  name: occupi-web
                  path: frontend/occupi-web/dist/occupi-web.zip

    build-tauri-app:
        strategy:
            matrix:
              include:
                - os: macos-latest # for Arm based macs (M1 and above).
                  goos: darwin
                  extension: ""
                  args: '--target aarch64-apple-darwin'
                  arch: arm64
                - os: macos-latest # for Intel based macs.
                  goos: darwin
                  extension: ""
                  args: '--target x86_64-apple-darwin'
                  arch: x86_64
                - os: windows-latest # for Windows.
                  goos: windows
                  extension: ".exe"
                  args: ''
                  arch: x86_64
                - os: ubuntu-latest # for Linux.
                  goos: linux
                  extension: ""
                  args: ''
                  arch: x86_64

        name: Build Tauri App
        runs-on: ${{ matrix.os }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Bun
              uses: oven-sh/setup-bun@v1
              with:
                bun-version: latest # or "latest", "canary", <sha>

            - name: Install dependencies with Bun
              run: |
                cd frontend/occupi-desktop
                bun install

            - name: Build with Tauri
              run: |
                cd frontend/occupi-desktop
                bun run tauri build

            - name: Archive and Upload MacOS Tauri App
              if: startsWith(matrix.os, 'macos')
              run: |
                mkdir -p tauri_artifacts
                cp -R src-tauri/target/release/bundle/dmg/* tauri_artifacts/ || true
                cp -R src-tauri/target/release/bundle/macos/* tauri_artifacts/ || true

            - name: Archive and Upload Windows Tauri App
              if: startsWith(matrix.os, 'windows')
              run: |
                mkdir -p tauri_artifacts
                cp -R src-tauri/target/release/bundle/nsis/* tauri_artifacts/ || true
                cp -R src-tauri/target/release/bundle/msi/* tauri_artifacts/ || true

            - name: Archive and Upload Linux Tauri App
              if: startsWith(matrix.os, 'ubuntu')
              run: |
                mkdir -p tauri_artifacts
                cp -R src-tauri/target/release/bundle/deb/* tauri_artifacts/ || true
                cp -R src-tauri/target/release/bundle/appimage/* tauri_artifacts/ || true
                cp -R src-tauri/target/release/bundle/rpm/* tauri_artifacts/ || true
                cp -R src-tauri/target/release/bundle/flatpak/* tauri_artifacts/ || true
        
            - name: Upload Tauri Artifacts
              uses: actions/upload-artifact@v4
              with:
                name: tauri-artifacts-${{ matrix.os }}
                path: frontend/occupi-desktop/tauri_artifacts

    release:
        name: Release
        runs-on: ubuntu-latest
        needs: [build-backend-binary, build-expo-app, build-vite-app, build-tauri-app]
        steps:
            - name: Install GitHub CLI
              run: |
                sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
                sudo apt-add-repository https://cli.github.com/packages
                sudo apt update
                sudo apt install gh

            - name: Login to GitHub
              run: |
                gh auth login

            - name: Create a Release
              run: |
                gh release create v1.0.0 -t "v1.0.0" -n "v1.0.0" ./occupi-backend/occupi-backend ./occupi-frontend/occupi-frontend ./occupi-frontend/dist ./occupi-frontend/build ./occupi-frontend/target/release/occupi-frontend

            - name: Upload Release Assets
              run: |
                gh release upload v1.0.0 ./occupi-backend/occupi-backend ./occupi-frontend/occupi-frontend ./occupi-frontend/dist ./occupi-frontend/build ./occupi-frontend/target/release/occupi-frontend