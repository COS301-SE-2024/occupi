services:
  occupi-backend-prod:
    image: $DOCKER_USERNAME/occupi-backend:latest
    container_name: occupi-backend-prod
    build:
      context: .
      dockerfile: Dockerfile.prod
    environment:
      - ENV=production
    networks:
      - webnet
    ports:
      - "8080:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - /etc/letsencrypt/live/occupi.tech/fullchain.pem:/etc/letsencrypt/live/occupi.tech/fullchain.pem:ro
      - /etc/letsencrypt/live/occupi.tech/privkey.pem:/etc/letsencrypt/live/occupi.tech/privkey.pem:ro
    restart: on-failure:5
    depends_on:
        rabbitmq-prod:
          condition: service_healthy

  rabbitmq-prod:
    image: rabbitmq:latest
    container_name: rabbitmq-prod
    ports:
      - "5672:5672"
    restart: on-failure:5
    environment:
      RABBITMQ_DEFAULT_USER: $RABBITMQ_DEFAULT_USER
      RABBITMQ_DEFAULT_PASS: $RABBITMQ_DEFAULT_PASS
    volumes:
      - rabbitmq-prod:/var/lib/rabbitmq
    networks:
      - webnet
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 30s
      retries: 3

  centrifugo-prod:
    image: centrifugo/centrifugo:v5
    container_name: centrifugo-prod
    volumes:
      - ./configs/config.json:/centrifugo/config.json
      - centrifugo-prod:/centrifugo/data
    command: centrifugo -c config.json --health
    ports:
      - 8001:8000
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: curl -f http://localhost:8001/health
      interval: 30s
      timeout: 10s
      retries: 5 

volumes:
  mongo-prod:
  rabbitmq-prod:

networks:
  webnet:
    external: true
